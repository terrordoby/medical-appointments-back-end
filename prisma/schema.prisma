generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  username  String    @unique
  password  String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  Doctor Doctor?
  patient Patient?

  @@map("users")
}

model Specialist {
  id          String @id @default(uuid())
  name        String @unique
  description String
  createdAt   DateTime @default(now())
  Doctor Doctor[]

  @@map("specialities")
}

model Doctor {
  id String @id @default(uuid())
  email String @unique
  crm String @unique
  createdAt DateTime @default(now())

  user User @relation(fields: [user_id],references: [id])
  user_id String @unique
  speciality Specialist @relation(fields: [speciality_id], references: [id])
  speciality_id String @unique
  doctorInfo DoctorInfo?
  doctorSchedule DoctorSchedule[]
  appointments Appointments?

  @@map("doctors")
}

model DoctorInfo {
  id String @id @default(uuid())
  duration Int
  price Decimal
  doctor_id String @unique
  doctor Doctor @relation(fields: [doctor_id], references: [id])
}

model Patient {
  id String @id @default(uuid())
  email String @unique
  document String @unique
  user_id String @unique
  user User @relation(fields: [user_id], references: [id])
  appointments Appointments?

  @@map("patients")
}

model DoctorSchedule {
  id String @id @default(uuid())
  start_at String
  end_at String
  day_of_week Int
  doctor_id String
  doctor Doctor @relation(fields: [doctor_id], references: [id])

  @@map("doctor_schedules")
}


model Appointments {
  id String @id @default(uuid())
  doctor_id String @unique
  Doctor Doctor @relation(fields: [doctor_id], references: [id])
  patient_id String @unique
  Patient Patient @relation(fields: [patient_id], references: [id])
  is_finshed Boolean @default(false)
  date DateTime
  note String

}
